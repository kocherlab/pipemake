name: Conda Upload

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          mamba-version: "*"
          activate-environment: pipemake
          environment-file: .conda/environment_build.yml
          python-version: 3.13
          channels: conda-forge,bioconda
          channel-priority: true
      - name: Build Ubuntu
        if: matrix.os == 'ubuntu-latest'
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          conda build .conda --output-folder build -c bioconda -c conda-forge
          anaconda -t "$ANACONDA_API_TOKEN" upload --user kocherlab build/linux-64/*.tar.bz2
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        shell: powershell
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          conda build .conda --output-folder build -c bioconda -c conda-forge
          anaconda -t "$env:ANACONDA_API_TOKEN" upload --user kocherlab build/win-64/*.tar.bz2
