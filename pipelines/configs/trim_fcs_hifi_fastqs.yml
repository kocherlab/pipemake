pipeline: trim-fcs-hifi-fastqs
version: 1.0
parser:
  help: Trim PacBio HiFi FASTQ files using HiFiAdapterFiltFSC
  arg-groups:
    basic:
      mutually-exclusive-args:
        input-parser:
          required: True
        taxa-type:
          required: True
      wildcards-args:
        fastq-standardized-filename: "{samples}.fastq.gz"
      args:
        fastq-wildcard:
          help: "Wildcard statement to represent FASTQs"
          type: str
          mutually-exclusive: "input-parser"
          wildcards: "fastq-standardized-filename"
        fastq-table:
          help: "Table with sample and FASTQs filenames"
          type: str
          action: confirmFile
          mutually-exclusive: "input-parser"
          wildcards: "fastq-standardized-filename"
        fastq-copy-method:
          help: "Specifies if FASTQs should be copied or symbolically linked."
          choices:
            - 'symbolic_link'
            - 'copy'
          default: 'symbolic_link'
        eukaryote-screen:
          help: "Eukaryote assembly screen"
          dest: "euk"
          action: store_true
          mutually-exclusive: "taxa-type"
        prokaryote-screen:
          help: "Prokaryote assembly screen"
          dest: "prok"
          action: store_true
          mutually-exclusive: "taxa-type"
setup:
  fastq_input:
    methods:
      wildcard-str: "{fastq-wildcard}"
      table-file: "{fastq-table}"
    args:
      standardized_filename: "FASTQ/Unfiltered/{fastq-standardized-filename}"
      copy_method: '{fastq-copy-method}'
      gzipped: True
      sample_keywords:
        - 'samples'

snakemake:
  modules:
    - hifi_trim_hifiadapterfiltFCS
