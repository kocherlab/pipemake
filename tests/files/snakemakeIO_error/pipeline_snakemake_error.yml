pipeline: fastq-filter
version: 1.0
parser:
  help: Filter FASTQ files using fastp
  arg-groups:
    basic:
      mutually-exclusive-args:
        input-parser:
          required: True
      wildcards-args:
        fastq-standardized-wildcard: "{samples}_{reads}.fq.gz"
      args:
        fastq-wildcard:
          help: "Wildcard statement to represent FASTQs"
          type: str
          mutually-exclusive: "input-parser"
          wildcards: "fastq-standardized-wildcard"
        fastq-table:
          help: "Table with sample and FASTQs filenames"
          type: str
          action: confirmFile
          mutually-exclusive: "input-parser"
          wildcards: "fastq-standardized-wildcard"
        fastq-copy-method:
          help: "Specifies if FASTQs should be copied or symbolically linked."
          choices:
            - 'symbolic_link'
            - 'copy'
          default: 'symbolic_link'
        dir-test:
          help: "Testing directory"
          type: str
          action: confirmDir
        min-length:
          help: "Minimum length of reads to keep"
          type: int
          default:
            str: "50"
    paths:
      args:
        unfiltered-fastq-dir:
          help: "Directory to store unfiltered FASTQ files"
          type: str
          default: 
            str: "FASTQ/Unfiltered"
        filtered-fastq-dir:
          help: "Directory to store filtered FASTQ files"
          type: str
          default: 
            str: "FASTQ/Filtered"
            suffix:
              - function: jobTimeStamp
              - function: jobRandomString
setup:
  fastq_input:
    methods:
      wildcard_str: "{fastq-wildcard}"
      table_file: "{fastq-table}"
    args:
      standardized_filename: "{unfiltered-fastq-dir}/{fastq-standardized-wildcard}"
      copy_method: '{fastq-copy-method}'
      gzipped: True
      sample_keywords:
        - 'samples'
  test_input:
    methods:
      dir_str: "{dir-test}"
    args:
      standardized_directory: "Test_Directory"
      copy_method: 'symbolic_link'
    snakefiles:
      - test_script
